what problems do i need to solve?
1.clearing result when inputting new number after pressing equal button (solved)
used boolean value
2.when there is a second operator in the display, calculate the first pair,then add the new operator(solved)
another boolean value?
what should happen?
every operator input, check if theres another one already, if so, get the result then add new operator
by using what? boolean, loop, includes()?
boolean may be efficient, but prob need a lot of if statements since it may be in conjunction with result boolean from first problem

good news: this problem has been SOLVED
how? at first, when the boolean was true, it would go through the calc function, essentially acting like an equal sign and clearing the result when i pressed a new number, so i just set result to false every time secOpr was true, and it seems to work pretty fine!
3.error handling i guess?
what should be displayed when the user makes a mistake? an error message.
what to do when the user presses equal on a single number, it prob should stay, and not display an error
yet another boolean?
guess what i used another boolean, and it seems to handle the rigorous testing pretty well
what about other cases now?
i might just leave this as it is because most of the errors are because of the user, not me, so i'll just tell that it wont work, and that they'll have to try again


4.when user enters two consecutive operators, the last one should be replaced with the curr one (solved)
tbh i forgot to document about this, but basically i just added another eles if block checking if the last character is an operator or not.

5.adding decimal input (solved)
it is now day 2 of making this project, i added a button, and guess what? another boolean to stop users from entering mutliple decimal in a single number, at first when i added two float numbers, it turned into an integer, and turns out it was because i was using parseInt, so I googled and used + before the numbers so it turns it into a number, whether it was an int or float

6.add backspace supprt(solved)
everytime i successfully implement a feature, the more im proud of myself :). this one was pretty simple though, just delete the last character, and if its an operator, set secOpr back to false so it doesnt mess up some of the existing code


UH OH
theres a problem when a number gets very big and it turns into the e+ format or whatever, and that format has a plus in it, which my code will then split the display with that + and it'll give out NaN.
After readinbg through the discord, I suppose I'll just leave it alone since they don't tell you to fix the scientific notation in the assignment

7.keyboard
this one seems pretty difficult, a method i can think of rn is by implementing a switch, since adding it in a for loop did not seem to help at all
i just thought of adding an if statement checking if the key pressed is in a string of 0-9, i may do that for the operators as well
crap i may have to rewrite how i add numbers, it may not be that bad tho, since i might be able to keep the logic inside the functions
just added a bunch of cases for the switch, and yessir, it works just as intended! onto the operators
added support for some of the operators, and its actually coming together really well!
time to handle the rest now.
and just like that, every button (except the clear button, idk what key to choose) has keyboard support!